/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 public/3D/daniel-whole.gltf
*/
import { useGLTF } from "@react-three/drei";
import React from "react";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

const PATH = "/3D/daniel-whole.gltf";
type Props = JSX.IntrinsicElements["group"];

export type DanielGLTF = {
  materials: {
    "Outer.009": THREE.MeshBasicMaterial;
  };
  nodes: {
    Daniel_Whole: THREE.SkinnedMesh;
  };
} & GLTF;

export function Daniel(props: Props) {
  const { materials, nodes } = useGLTF(PATH) as DanielGLTF;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Daniel_Whole.geometry}
        material={materials["Outer.009"]}
        rotation={[Math.PI / 2, 0, 0]}
        scale={0.1}
      ></mesh>
    </group>
  );
}

useGLTF.preload(PATH);
